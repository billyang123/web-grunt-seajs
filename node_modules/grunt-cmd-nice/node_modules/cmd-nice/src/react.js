/*
 * React jsx compiler
 * @ermin.zem
 * @create 2015/04/14
 * */

var Base = require("./base");
var Q = require('q');
var util = require("util");
var Extend = require('extend');
var ReactTools = require("react-tools");

/**
 * @constructor
 * @param options:
 *   sourceMap(Boolean)     : append inline source map at the end of the transformed source
 *   harmony(Boolean)       : enable ES6 features
 *   sourceFilename(String) : the output filename for the source map
 *   stripTypes(Boolean)    : strips out type annotations
 */
var React = function(options){
    var self = this;

    var defaults = {
        sourceMap: false,
        harmony: true,
        sourceFilename: 'source.js',
        stripTypes: true
    };
    Extend(true, defaults, options);

    Base.call(self, options);
};
util.inherits(React, Base);

React.prototype.execute = function(inputFile){
    var self = this;
    var deferred = Q.defer();

    var content = inputFile.content.toString();

    var code = ReactTools.transform(content, this.options);
    code = self.beautify(code, "js");

    process.nextTick(function() {
        deferred.resolve(code);
    });
    return deferred.promise;
};

module.exports = React;